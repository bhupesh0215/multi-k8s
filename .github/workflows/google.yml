# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: multi-k8s-cluster    # TODO: update to cluster name
  GKE_ZONE: asia-southeast1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: multi-k8s-deployment # TODO: update to deployment name
  
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set Git SHA as an Environment Variable
      id: git_sha
      run: echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t multi-client ./client
        docker build -t multi-nginx ./nginx
        docker build -t multi-server ./server
        docker build -t multi-worker ./worker

    - name: Tag Docker image
      run: |
        docker tag multi-client bhupesh0215/multi-client:v5
        docker tag multi-nginx bhupesh0215/multi-nginx:v5
        docker tag multi-server bhupesh0215/multi-server:v5
        docker tag multi-worker bhupesh0215/multi-worker:v5
        
    - name: Push Docker image
      run: |
        docker push bhupesh0215/multi-client:v5
        docker push bhupesh0215/multi-nginx:v5
        docker push bhupesh0215/multi-server:v5
        docker push bhupesh0215/multi-worker:v5
    
    # Create Docker image and deploy
    - name: Create docker image and deploy 
      run: |
        chmod +x deploy.sh
        ./deploy.sh
