# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: multi-k8s-cluster    # TODO: update to cluster name
  GKE_ZONE: asia-southeast1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: multi-k8s-deployment # TODO: update to deployment name
  CLOUDSDK_CORE_DISABLE_PROMPTS: 1
  
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set Git SHA as an Environment Variable
      id: git_sha
      run: echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'


    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t bhupesh0215/multi-client:latest -t bhupesh0215/multi-client:$GIT_SHA -f ./client/Dockerfile ./client
        docker build -t bhupesh0215/multi-server:latest -t bhupesh0215/multi-server:$GIT_SHA -f ./server/Dockerfile ./server
        docker build -t bhupesh0215/multi-worker:latest -t bhupesh0215/multi-worker:$GIT_SHA -f ./worker/Dockerfile ./worker

        
    - name: Push Docker image
      run: |
        docker push bhupesh0215/multi-client:$GIT_SHA
        docker push bhupesh0215/multi-server:$GIT_SHA
        docker push bhupesh0215/multi-worker:$GIT_SHA
        docker push bhupesh0215/multi-client
        docker push bhupesh0215/multi-server
        docker push bhupesh0215/multi-worker
    
    # Prepare for deploy
    - name: Prepare for deploy
      run: | 
        curl https://sdk.cloud.google.com | bash > /dev/null
        source $HOME/google-cloud-sdk/path.bash.inc
        gcloud components update kubectl
        gcloud config set project $PROJECT_ID
        gcloud config set compute/zone asia-southeast1-a
        gcloud container clusters get-credentials multi-cluster
    
    # # Deploy to GKE
    # - name: Deploy to GKE
    #   run: |
    #     kubectl apply -f k8s
    #     kubectl set image deployments/client-deployment server=bhupesh0215/multi-client:$GIT_SHA
    #     kubectl set image deployments/server-deployment server=bhupesh0215/multi-server:$GIT_SHA
    #     kubectl set image deployments/worker-deployment server=bhupesh0215/multi-worker:$GIT_SHA




